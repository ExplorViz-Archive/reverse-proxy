worker_processes  1;

events {
  worker_connections 1024;
}

http {
  server {
    listen 8080;

    # (workaround) use variables for upstream (i.e. host), 
    # because nginx fails on startup if it cannot resolve an upstream

    # 127.0.0.11 is internal Docker DNS server that resolves the variable
    # values

    location /v1/landscapes/ {
      resolver 127.0.0.11;
      set $upstream_landscape landscape;
      proxy_pass http://$upstream_landscape:8081/v1/landscapes/;
      proxy_http_version 1.1;
    }

    location /v1/timestamps/ {
      resolver 127.0.0.11;
      set $upstream_landscape landscape;
      proxy_pass http://$upstream_landscape:8081/v1/timestamps/;
      proxy_http_version 1.1;
    }

    location /v1/tokens/ {
      resolver 127.0.0.11;
      set $upstream_auth authentication;
      proxy_pass http://$upstream_auth:8082/v1/tokens/;
      proxy_http_version 1.1;
    }
    
    location /v1/users/ {
      resolver 127.0.0.11;
      set $upstream_auth authentication;
      proxy_pass http://$upstream_auth:8082/v1/users/;
      proxy_http_version 1.1;
    }
    
    location /v1/roles/ {
      resolver 127.0.0.11;
      set $upstream_auth authentication;
      proxy_pass http://$upstream_auth:8082/v1/roles/;
      proxy_http_version 1.1;
    }
    
    location /v1/settings/ {
      resolver 127.0.0.11;
      set $upstream_auth authentication;
      proxy_pass http://$upstream_auth:8082/v1/settings/;
      proxy_http_version 1.1;
    }
    
    location /v1/agents/ {
      resolver 127.0.0.11;
      set $upstream_discovery discovery;
      proxy_pass http://$upstream_discovery:8083/v1/agents/;
      proxy_http_version 1.1;
    }

  }
}
